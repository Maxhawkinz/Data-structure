import java.util.Arrays;
import java.util.Scanner;

public class binary {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.print("Enter the number of customer IDs: ");
        int size = scanner.nextInt();

        int[] customerIds = new int[size];

        System.out.println("Enter the customer IDs (unsorted):");
        for (int i = 0; i < size; i++) {
            customerIds[i] = scanner.nextInt();
        }

        Arrays.sort(customerIds);
        System.out.println("Sorted customer IDs: " + Arrays.toString(customerIds));

        boolean running = true;

        while (running) {
            System.out.println("\nChoose an option:");
            System.out.println("1. Search for customer ID");
            System.out.println("2. Exit");
            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    System.out.print("Enter the customer account ID to search: ");
                    int targetId = scanner.nextInt();
                    boolean found = binarySearch(customerIds, targetId);
                    if (found) {
                        System.out.println("Customer account ID " + targetId + " exists.");
                    } else {
                        System.out.println("Customer account ID " + targetId + " does not exist.");
                    }
                    break;

                case 2:
                    running = false;
                    System.out.println("Exiting the program.");
                    break;

                default:
                    System.out.println("Invalid choice. Please enter 1 or 2.");
            }
        }
        scanner.close();
    }

    public static boolean binarySearch(int[] arr, int target) {
        int l = 0;
        int h = arr.length - 1;

        while (l <= h) {
            int mid = l + (h - l) / 2;

            if (arr[mid] == target) {
                return true;
            } else if (arr[mid] < target) {
                l = mid + 1;
            } else {
                h = mid - 1;
            }
        }
        return false;
    }
}
